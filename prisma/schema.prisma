// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String       @unique
  password     String
  name         String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  accounts     Account[]
  categories   Category[]
  transactions Transaction[]
}

model Account {
  id           Int           @id @default(autoincrement())
  name         String
  type         AccountType
  balance      Decimal
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum AccountType {
  DEBIT_CARD
  SAVING
  CREDIT_CARD
  CASH
  INVESTMENT
  BUSINESS_CARD
  OTHER
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         TransactionType
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id          Int             @id @default(autoincrement())
  description String
  amount      Decimal
  date        DateTime
  type        TransactionType
  isRecurring Boolean         @default(false)
  categoryId  Int
  category    Category        @relation(fields: [categoryId], references: [id])
  accountId   Int
  account     Account         @relation(fields: [accountId], references: [id])
  userId      Int
  user        User            @relation(fields: [userId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

